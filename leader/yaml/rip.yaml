apiVersion: v1
kind: Pod
spec:
  imagePullSecrets:
    - name: {{ image_pull_secret }}
  containers:
    - name: rip
      image: {{ self_image }}
      imagePullPolicy: {{ image_pull_policy }}
      securityContext:
        privileged: true
      command:
        - "bash"
        - "-c"
        - |
          cd /
          aws --endpoint-url "{{ greenhouse_result.endpoint }}" s3 cp "{{ greenhouse_result }}" /greenhouse.tar.gz
          aws --endpoint-url "{{ routersploit_result.endpoint }}" s3 cp "{{ routersploit_result }}" /routersploit.tar.gz
          mkdir /tmp/output
          # THIS FILEPATH CANNOT START WITH THE PREFIX GREENHOUSE
          mv /greenhouse.tar.gz /gweenhouse.tar.gz
          /start_instance.sh gweenhouse.tar.gz routersploit.tar.gz /tmp/output

          cd /tmp/output
          tar -czf /tmp/rip.tar.gz .
          aws --endpoint-url "{{ rip_raw.endpoint }}" s3 cp /tmp/rip.tar.gz "{{ rip_raw }}"
          
          # fuck it. we ball
          apt-get update && apt-get install -y python3 python3-pip
          pip3 install sonyflake-py pymongo
          mkdir /root/meta
          function idgen () {
                  python3 <<EOF
          import sonyflake
          sf = sonyflake.SonyFlake(machine_id=lambda: int('{{ job }}') & 0xffff)
          print(sf.next_id())
          EOF
          }
          function put_meta () {
                  python3 <<EOF
          import pymongo, yaml
          a = pymongo.MongoClient("$MONGO_URL")
          b = a.get_database("$MONGO_DATABASE").get_collection("haccs_pipeline")["{{ mongo_subcollection }}"]
          c = yaml.safe_load(open("$2", "r"))
          b.replace_one({"_id": "$1"}, c, upsert=True)
          EOF
          }

          for exploit in $(find /tmp/output -name '*.py'); do
                ident=$(idgen)
                echo "****** New exploit! ******"
                echo "Assigning $ident to $exploit"
                aws --endpoint-url "{{ rip_exploit_data.endpoint }}" s3 cp "$exploit" "s3://{{ rip_exploit_data.bucket }}/{{ rip_exploit_data.prefix }}$ident{{ rip_exploit_data.suffix }}"
                cat >/root/meta/$ident.yaml <<EOF
          sample: "{{ job }}"
          filename: "$exploit"
          EOF
                put_meta $ident /root/meta/$ident.yaml
          done

      env:
        - name: TARGETPATH
          value: {{ greenhouse_results }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ bucket_secret }}
              key: username
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ bucket_secret }}
              key: password
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: "{{ mongo_secret }}"
              key: url
        - name: MONGO_DATABASE
          valueFrom:
            secretKeyRef:
              name: "{{ mongo_secret }}"
              key: database
      resources:
        requests:
          cpu: 2
          memory: 3Gi
        limits:
          cpu: 4
          memory: 6Gi
